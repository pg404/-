////问题描述
//　　十六进制数是在程序设计时经常要使用到的一种整数的表示方式。它有0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F共16个符号，
//分别表示十进制数的0至15。十六进制的计数方法是满16进1，所以十进制数16在十六进制中是10，而十进制的17在十六进制中是11，
//以此类推，十进制的30在十六进制中是1E。

//　　给出一个非负整数，将它表示成十六进制的形式。
//输入格式
//　　输入包含一个非负整数a，表示要转换的数。0<=a<=2147483647
//输出格式
//　　输出这个整数的16进制表示


#include <iostream>
using namespace std;
int main() {
	
    int a;
    cin >> a;
    
    int i = 0;
    char b[100];
    
    if (a == 0) {
        cout << "0";//为0直接输出； 
        
    } else {//除16取余数法，用字符类型数组存储每一个余数。 
    
        while (a != 0) {
            if (a % 16 >= 10)
                b[i++] = a % 16 + 'A' -10;//处理余数为10，11，12，13，14，15的情况：分别表示为A,B,C,D,E,F 
            else
                b[i++] = a % 16 + '0';//这里的‘0’跟上面的 ‘A’都是为了控制ASCII的取值，不加‘0’会将对应的“0――9”变成ASCII0-9所代表的符号 
            a = a / 16;
        }
    }
    
    //逆序输出数组 
    for (int k = i - 1; k >= 0; k--)
            cout << b[k];
            
            
    return 0;
}



