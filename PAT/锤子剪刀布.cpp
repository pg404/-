/*

锤子剪刀布 (20)

题目描述
大家应该都会玩“锤子剪刀布”的游戏：

现给出两人的交锋记录，请统计双方的胜、平、负次数，并且给出双方分别出什么手势的胜算最大。

输入描述:
输入第1行给出正整数N（<=105），即双方交锋的次数。随后N行，每行给出一次交锋的信息，即甲、乙双方同时给出的的手势。C代表“锤子”、J代表“剪刀”、B代

表“布”，第1个字母代表甲方，第2个代表乙方，中间有1个空格。


输出描述:
输出第1、2行分别给出甲、乙的胜、平、负次数，数字间以1个空格分隔。第3行给出两个字母，分别代表甲、乙获胜次数最多的手势，中间有1个空格。如果解不唯

一，则输出按字母序最小的解。

输入例子:
10

C J

J B

C B

B B

B C

C C

C B

J B

B C

J J

输出例子:
5 3 2

2 3 5

B B

*/ 


//石头C，剪刀J，布B 
//ASCII码分别是 B66    C67     J74 

#include <iostream>
using namespace std;
int win[3] = {0};//以甲为视角表示： win[0], win[1], win[2]分别表示甲胜、负、平的局数 

char max(int *a){//根据统计的三种状态局来计算出，出什么达到最大的胜率，如果相同胜率则返回字母序列最小的 
	char r = 'B';
	if(a[1] > a[0]){
		a[0] = a[1];
		r = 'C';
	}
	if(a[2] > a[0]){
		r = 'J';
	}
	return r;
}

int main(){
	
	int n;
	cin>>n;
	char a[105], b[105];
	int awin[3] = {0};//甲的三种状态赢局的统计 ，awin[0]表示甲出布赢，awin[1]表示甲出石头赢，awin[2]表示甲出剪刀赢。 
	int bwin[3] = {0};//与上相似
	 
	for(int i = 0; i < n; i++){
		cin>>a[i]>>b[i];
		int k = (a[i] - b[i]) * (a[i] - b[i]); //
		if(k == 1){
			a[i] == 66 ? (win[0]++, awin[0]++ ) : (win[1]++ , bwin[0]++) ; 
		}else if(k == 49){
			a[i] == 67 ? (win[0]++, awin[1]++ ) : (win[1]++ , bwin[1]++) ;
		}else if(k == 64){
			a[i] == 74 ? (win[0]++, awin[2]++ ) : (win[1]++ , bwin[2]++) ;
		}else{
			win[2]++;
		}
	}
	
	cout<<win[0]<<" "<<win[1]<<" "<<win[2]<<endl;//win[0], win[1], win[2]分别表示甲胜、负、平的局数 
	cout<<win[1]<<" "<<win[0]<<" "<<win[2]<<endl; //相似地，与上相反，甲胜就是乙负。甲负就是乙胜 
	
	cout<<max(awin)<<" "<<max(bwin)<<endl;
	return 0;
} 


